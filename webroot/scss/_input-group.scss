// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-project {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .form-control,
  > .custom-select,
  > .custom-file {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    // Bring the "active" form control to the top of surrounding elements
    &:focus {
      z-index: 3;
    }

    + .form-control,
    + .custom-select,
    + .custom-file {
      margin-left: -$input-border-width;
    }
  }

  > .form-control,
  > .custom-select {
    &:not(:last-child) { @include border-right-radius(0); }
    &:not(:first-child) { @include border-left-radius(0); }
  }

  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  > .custom-file {
    display: flex;
    align-items: center;

    &:not(:last-child) .custom-file-label,
    &:not(:last-child) .custom-file-label::after { @include border-right-radius(0); }
    &:not(:first-child) .custom-file-label { @include border-left-radius(0); }
  }
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-project-prepend,
.input-project-append {
  display: flex;

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-project-text` since it shares the same border-color
  // as our inputs.
  .btn {
    position: relative;
    z-index: 2;
  }

  .btn + .btn,
  .btn + .input-project-text,
  .input-project-text + .input-project-text,
  .input-project-text + .btn {
    margin-left: -$input-border-width;
  }
}

.input-project-prepend { margin-right: -$input-border-width; }
.input-project-append { margin-left: -$input-border-width; }


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-project-text {
  display: flex;
  align-items: center;
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $font-size-base; // Match inputs
  font-weight: $font-weight-normal;
  line-height: $input-line-height;
  color: $input-project-addon-color;
  text-align: center;
  white-space: nowrap;
  background-color: $input-project-addon-bg;
  border: $input-border-width solid $input-project-addon-border-color;
  @include border-radius($input-border-radius);

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-project-lg > .form-control,
.input-project-lg > .input-project-prepend > .input-project-text,
.input-project-lg > .input-project-append > .input-project-text,
.input-project-lg > .input-project-prepend > .btn,
.input-project-lg > .input-project-append > .btn {
  @extend .form-control-lg;
}

.input-project-sm > .form-control,
.input-project-sm > .input-project-prepend > .input-project-text,
.input-project-sm > .input-project-append > .input-project-text,
.input-project-sm > .input-project-prepend > .btn,
.input-project-sm > .input-project-append > .btn {
  @extend .form-control-sm;
}


// Prepend and append rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-project >` part, but without it, we cannot override the sizing.


.input-project > .input-project-prepend > .btn,
.input-project > .input-project-prepend > .input-project-text,
.input-project > .input-project-append:not(:last-child) > .btn,
.input-project > .input-project-append:not(:last-child) > .input-project-text,
.input-project > .input-project-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-project > .input-project-append:last-child > .input-project-text:not(:last-child) {
  @include border-right-radius(0);
}

.input-project > .input-project-append > .btn,
.input-project > .input-project-append > .input-project-text,
.input-project > .input-project-prepend:not(:first-child) > .btn,
.input-project > .input-project-prepend:not(:first-child) > .input-project-text,
.input-project > .input-project-prepend:first-child > .btn:not(:first-child),
.input-project > .input-project-prepend:first-child > .input-project-text:not(:first-child) {
  @include border-left-radius(0);
}
